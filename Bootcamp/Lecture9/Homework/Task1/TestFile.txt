1. Write a program to count the number of lines in a file

2. Write a program which reads input from Console infinitely long, with minor restrictions:
    - When user entered 8 lines of text you should write them in the file inputFromVIM{indexOfFile}.txt
    - For the next 8 lines write them in the next file inputFromVIM{indexOfFile + 1}.txt and so on.
BUT when user enters a stop word "LET ME OUT"(or anything else you like) you should do the following:
    - Make sure that last file inputFromVim{indexOfFile}.txt is created
    - Move all the created files during the user session to folder Session_{DateTime}

3 Write a program which tracks students attendance:
    - You have a Student(Name, FavoriteNumber, LecturesAttended), LecturesAttended will increase by one when you call .AttendLecture()
        - FavoriteNumber should not be serialized, and can't be set, decided randomly(Use Random)
    - You have a function SemesterEmulation which takes a group of students and calls .AttendLecture() on each student
        - BUT if FavoriteNumber is the same as lecture number - student skips the lecture
    - Semester ends in 8 iterations
    - After semester simulation is done, serialize all students in one snapshot.json
    - Next time you run your .exe you should check if such file exists, if so read students and proceed to next semester emulation.

4*. Remember Lecture4? Example with phones, emergency test? Nice so here is your new task:
    - You should log every exception that happens during execution into log file:
        - Create a class Logger which will have method WriteLine(string)
            - write exceptions using your logger(Console.WriteLine() -> logger.WriteLine())
            - your logger should also write messages with the following format: {DateTime.UtcNow} - {yourLog}
            - Do not override your log file, it should be append only.