@model IEnumerable<PersonsMVC.Models.UserViewModel>
@using PersonsMVC.Middleware.Helpers;

@{
    ViewData["Title"] = "List of people";
}

@Html.ErrorAlert(TempData["Error"])
@Html.ErrorAlert(ViewData["Error"])

<div class="row">
    <div class="col-sm-8 border border-secondary-4">
        <h1>Set the filter:</h1>
        <form id="FilterForm" class="container-fluid">
            <div class="input-group mb-3">
                <div class="input-group-append">
                    <label class="input-group-text" for="#FilterName">Name:</label>
                </div>

                <input id="FilterName" name="FilterName" type="text" class="form-control" />
            </div>

            <div class="input-group mb-3">
                <div class="input-group-append">
                    <label class="input-group-text" for="#FilterLastName">Last name:</label>
                </div>

                <input id="FilterLastName" name="FilterLastName" type="text" class="form-control" />
            </div>

            <div class="form-group p-3">
                <input id="ResetFilterForm_btn" type="reset" class="btn btn-danger" value="Clear" />
            </div>
        </form>
    </div>

    <div class="col-sm-4">
        <p>
            <button id="launch-create-form" type="button" class="btn btn-success">
                Create new
            </button>
        </p>
    </div>
</div>

<div id="user-list" class="container-fluid mt-2 border border-secondary-4">
    @await Html.PartialAsync("UsersList", Model)
</div>

<div class="modal fade" id="modify-form" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="form">
        <div class="modal-content">
            <div id="modify-form-container" class="modal-body">
                @await Html.PartialAsync("UserModify", new UserViewModel())
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var editPostRoute = '@Url.Action("Edit", "Home", new { id = "-1" })';
        var editRoute = '@Url.Action("Edit")';
        var createRoute = '@Url.Action("Create")';
        var filterRoute = '@Url.Action("Filter")';
        var deleteRoute = '@Url.Action("Delete","Home",new { id = "-1" })';
    </script>
    <script src='@Url.Content("~/js/indexLogic.js")' type="text/javascript"></script>
}